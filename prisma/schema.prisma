generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Account {
  id                String  @id @default(cuid()) // uuid
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  // it change name in database from providerAccountId to provider_account_id
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  // both is unique 
  // make database tables account

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  // sessions      Session[]

  @@map("users")
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

// passwor and email is optional as user can regiser by google github 

// npx prisma generate  => i should stop server when generating
// npx migrate dev or  npx prisma db push
// transform models to database tables
// and open it from pgAdmin

// npx prisma studio
// npx prisma format
